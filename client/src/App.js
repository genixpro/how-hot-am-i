import React, {Component} from 'react';
import logo from './logo.svg';
import './App.css';
import Webcam from "react-webcam";
import {Button} from 'reactstrap';
import {
    Card, CardImg, CardText, CardBody,
    CardTitle, CardSubtitle, Col, Row
} from 'reactstrap';
import 'bootstrap/dist/css/bootstrap.min.css';
import axios from 'axios';
import {BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';
import { FacebookProvider, ShareButton } from 'react-facebook';
import {
  BrowserView,
  MobileView,
  isBrowser,
  isMobile
} from "react-device-detect";
import { jsx } from '@emotion/core'
import { ClipLoader } from 'react-spinners';

class App extends Component {

    constructor() {
        super();
        this.state = {
            video: null,
            showingResults: false,
            score: null,
            loadingWebcam: false,
            loadingUpload: false
        }
    }

    componentDidMount()
    {

    }

    updateWithScore(score, image)
    {
        const baseScores = [2.033, 2.067, 2.133, 2.167, 2.233, 2.3, 2.3, 2.333, 2.333, 2.5, 2.567, 2.633, 2.633, 2.633, 2.667, 2.7, 2.7, 2.733, 2.767, 2.767, 2.8, 2.8, 2.833, 2.867, 2.867, 2.867, 2.9, 2.933, 3.0, 3.0, 3.067, 3.067, 3.067, 3.067, 3.1, 3.1, 3.133, 3.167, 3.2, 3.2, 3.2, 3.2, 3.2, 3.233, 3.233, 3.233, 3.233, 3.267, 3.267, 3.267, 3.267, 3.267, 3.3, 3.3, 3.3, 3.333, 3.333, 3.333, 3.333, 3.333, 3.333, 3.333, 3.367, 3.367, 3.367, 3.367, 3.4, 3.4, 3.4, 3.433, 3.433, 3.433, 3.433, 3.433, 3.433, 3.433, 3.433, 3.433, 3.467, 3.467, 3.467, 3.467, 3.467, 3.467, 3.5, 3.5, 3.5, 3.5, 3.5, 3.533, 3.533, 3.533, 3.533, 3.533, 3.533, 3.567, 3.567, 3.567, 3.567, 3.567, 3.567, 3.567, 3.6, 3.6, 3.6, 3.6, 3.633, 3.633, 3.633, 3.633, 3.633, 3.633, 3.633, 3.633, 3.633, 3.633, 3.667, 3.667, 3.667, 3.667, 3.667, 3.667, 3.667, 3.667, 3.667, 3.667, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.733, 3.733, 3.733, 3.733, 3.733, 3.733, 3.733, 3.733, 3.733, 3.733, 3.767, 3.767, 3.767, 3.767, 3.767, 3.767, 3.767, 3.767, 3.767, 3.767, 3.767, 3.8, 3.8, 3.8, 3.8, 3.8, 3.8, 3.8, 3.8, 3.8, 3.833, 3.833, 3.833, 3.833, 3.833, 3.833, 3.833, 3.833, 3.833, 3.833, 3.833, 3.833, 3.867, 3.867, 3.867, 3.867, 3.867, 3.867, 3.867, 3.867, 3.867, 3.867, 3.867, 3.867, 3.867, 3.9, 3.9, 3.9, 3.9, 3.9, 3.9, 3.9, 3.9, 3.9, 3.9, 3.9, 3.933, 3.933, 3.933, 3.933, 3.933, 3.933, 3.933, 3.933, 3.933, 3.933, 3.933, 3.933, 3.967, 3.967, 3.967, 3.967, 3.967, 3.967, 3.967, 3.967, 3.967, 3.967, 3.967, 3.967, 3.967, 3.967, 3.967, 3.967, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.033, 4.067, 4.067, 4.067, 4.067, 4.067, 4.067, 4.067, 4.067, 4.067, 4.067, 4.067, 4.067, 4.067, 4.067, 4.067, 4.1, 4.1, 4.1, 4.1, 4.1, 4.1, 4.1, 4.1, 4.1, 4.1, 4.1, 4.1, 4.1, 4.1, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.133, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.167, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.233, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.267, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.3, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.333, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.367, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.4, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.433, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.467, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.533, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.567, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.6, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.633, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.667, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.7, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.733, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.767, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.833, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.867, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.933, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 4.967, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.033, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.067, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.1, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.133, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.167, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.2, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.233, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.267, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.3, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.333, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.367, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.4, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.433, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.467, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.533, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.567, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.6, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.633, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.667, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.7, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.733, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.767, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.8, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.833, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.867, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.9, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.933, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 5.967, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.033, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.067, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.1, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.133, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.167, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.233, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.267, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.3, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.333, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.367, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.4, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.433, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.467, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.533, 6.567, 6.567, 6.567, 6.567, 6.567, 6.567, 6.567, 6.567, 6.567, 6.567, 6.567, 6.567, 6.567, 6.567, 6.567, 6.567, 6.567, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.6, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.633, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.667, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.7, 6.733, 6.733, 6.733, 6.733, 6.733, 6.733, 6.733, 6.733, 6.733, 6.733, 6.733, 6.733, 6.733, 6.733, 6.733, 6.733, 6.733, 6.733, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.767, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.8, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.833, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.867, 6.9, 6.9, 6.9, 6.9, 6.9, 6.9, 6.9, 6.9, 6.9, 6.9, 6.9, 6.9, 6.9, 6.9, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.933, 6.967, 6.967, 6.967, 6.967, 6.967, 6.967, 6.967, 6.967, 6.967, 6.967, 6.967, 6.967, 6.967, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.033, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.067, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.1, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.133, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.167, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.2, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.233, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.267, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.3, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.333, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.367, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.4, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.433, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.467, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.5, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.533, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.567, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.633, 7.633, 7.633, 7.633, 7.633, 7.633, 7.633, 7.633, 7.633, 7.633, 7.633, 7.633, 7.633, 7.633, 7.633, 7.633, 7.633, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.667, 7.7, 7.7, 7.7, 7.7, 7.7, 7.7, 7.7, 7.7, 7.7, 7.7, 7.7, 7.7, 7.7, 7.7, 7.7, 7.7, 7.7, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.733, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.767, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.8, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.833, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.867, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.9, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.933, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 7.967, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.033, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.067, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.1, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.133, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.167, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.2, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.233, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.267, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.333, 8.333, 8.333, 8.333, 8.333, 8.333, 8.333, 8.333, 8.333, 8.333, 8.333, 8.333, 8.333, 8.333, 8.333, 8.333, 8.333, 8.333, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.367, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.4, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.433, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.467, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.533, 8.533, 8.533, 8.533, 8.533, 8.533, 8.533, 8.533, 8.533, 8.533, 8.533, 8.533, 8.533, 8.533, 8.533, 8.533, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.567, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.6, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.633, 8.667, 8.667, 8.667, 8.667, 8.667, 8.667, 8.667, 8.667, 8.667, 8.667, 8.667, 8.667, 8.7, 8.7, 8.7, 8.7, 8.7, 8.7, 8.733, 8.733, 8.733, 8.733, 8.733, 8.733, 8.733, 8.733, 8.733, 8.733, 8.733, 8.767, 8.767, 8.767, 8.767, 8.767, 8.767, 8.767, 8.767, 8.767, 8.767, 8.767, 8.8, 8.8, 8.8, 8.8, 8.8, 8.8, 8.8, 8.8, 8.8, 8.8, 8.8, 8.8, 8.833, 8.833, 8.833, 8.833, 8.833, 8.833, 8.833, 8.833, 8.833, 8.833, 8.833, 8.833, 8.833, 8.833, 8.833, 8.867, 8.867, 8.867, 8.867, 8.867, 8.867, 8.867, 8.867, 8.867, 8.867, 8.867, 8.867, 8.867, 8.867, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9, 8.9, 8.933, 8.933, 8.933, 8.933, 8.933, 8.933, 8.933, 8.933, 8.967, 8.967, 8.967, 8.967, 8.967, 8.967, 8.967, 8.967, 8.967, 8.967, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.033, 9.033, 9.033, 9.033, 9.033, 9.033, 9.067, 9.067, 9.1, 9.1, 9.1, 9.133, 9.133, 9.133, 9.167, 9.2, 9.2, 9.2, 9.267, 9.3, 9.3, 9.3, 9.333, 9.367, 9.4, 9.4, 9.5];

        const scoreIndex = Math.min(Math.floor(score * baseScores.length), baseScores.length - 1)

        const yourScore = baseScores[scoreIndex];

        const buckets = [];

        for(let i = 0; i < 10; i += 0.5)
        {
            const name = (Math.round(i*2)/2).toString();

            let count = 0;

            baseScores.forEach((score) =>
            {
                if(score >= i && score < (i + 0.05))
                {
                    count += 1;
                }
            });

            const data = {};
            if (name.indexOf(".") === -1)
            {
                data.name = name;
            }
            else
            {
                data.name = "";
            }

            if (i <= yourScore)
            {
                data.percent = 0;
                data.percent2 = Math.round((count / baseScores.length) * 1000)/10;
            }
            else
            {
                data.percent = Math.round((count / baseScores.length) * 1000)/10;
                data.percent2 = 0;
            }

            buckets.push(data);
        }

        const text = "I%20just%20got%20a%20" + Math.round(yourScore*10)/10 + "%20on%20http%3A%2F%2Fhowhotami.xyz%2F%20.%20You%20can%20find%20out%20how%20hot%20AI%20thinks%20you%20are%20too%20by%20going%20to%20http%3A%2F%2Fhowhotami.xyz%2F";

        const fbLink = "https://www.facebook.com/dialog/share?" +
            "app_id=1046240502214889" +
            "&display=popup" +
            "&href=http%3A%2F%2Fhowhotami.xyz%2F" +
            "&quote=" + text +
            "&redirect_uri=http%3A%2F%2Fhowhotami.xyz%2F";

        const twitterLink = "https://twitter.com/intent/tweet?text=" + text;

        this.setState({
            data: buckets,
            score: yourScore,
            percentileScore: Math.floor(score * 100),
            showingResults: true,
            faceImage: "data:image/jpeg;base64," + image.toString(),
            fbShareLink: fbLink,
            twitterLink: twitterLink
        });
    }


    setRef(webcam) {
        this.webcam = webcam;
    }

    submitPressed() {
        const imageSrc = this.webcam.getScreenshot();
        if (imageSrc)
        {

        this.setState({loadingWebcam: true});
            axios.post('http://howhotami.xyz/process', {"image": imageSrc}).then((response) =>
            {
                this.setState({loadingWebcam: false});
                this.updateWithScore(response.data.score, response.data.image);

            }, (error) =>
            {
                this.setState({loadingWebcam: false});
                alert(error.toString() + error.body.toString());
            })
        }
    }

    selectPhoto() {
        const upload = document.createElement('input');
        upload.setAttribute('type', 'file');
        const self = this;
        function handleFiles() {
            var fileList = this.files;
            var reader  = new FileReader();

              reader.addEventListener("load", function () {
                self.setState({loadingUpload: true});
                axios.post('http://howhotami.xyz/process', {"image": reader.result}).then((response) =>
                {
                    self.setState({loadingUpload: false});
                    self.updateWithScore(response.data.score, response.data.image);
                }, (error) =>
                {
                    self.setState({loadingUpload: false});
                    alert(error.toString() + error.body.toString());
                })
              }, false);


            reader.readAsDataURL(fileList[0]);
        }

        upload.addEventListener("change", handleFiles, false);
        upload.click();
    }

    tryAgain() {
        this.setState({showingResults: false});
    }


    render() {
        const videoConstraints = {
           facingMode: {"ideal": "user"}
        };

        return (
            <div className="App">
                <div className="App-header">
                    <img src={logo} className="App-logo" alt="logo"/>
                    <p>Find out how hot our Artificial Intelligence thinks you are!</p>
                </div>
                <div>
                    {
                        !this.state.showingResults ?
                            <Card className={"video-card"}>
                                <BrowserView>
                                    <CardBody className={"camArea"}>
                                        <Webcam
                                            videoConstraints={videoConstraints}
                                            ref={this.setRef.bind(this)}
                                            screenshotFormat="image/jpeg"
                                            screenshotWidth={1280}
                                        />
                                        <br/>


                                        <Button className={"upload-button"} onClick={this.submitPressed.bind(this)}>
                                            <span>Upload Photo</span>
                                            &nbsp;
                                            <ClipLoader
                                              sizeUnit={"px"}
                                              size={16}
                                              color={'#ffffff'}
                                              loading={this.state.loadingWebcam} />
                                        </Button>
                                        <Button className={"select-photo-button"} onClick={this.selectPhoto.bind(this)}>
                                            <span>Select Photo</span>
                                            &nbsp;
                                            <ClipLoader
                                              sizeUnit={"px"}
                                              size={16}
                                              color={'#ffffff'}
                                              loading={this.state.loadingUpload} />
                                        </Button>
                                    </CardBody>
                                </BrowserView>
                                <MobileView>
                                    <CardBody className={"camArea"}>
                                        <Button className={"select-photo-button"} onClick={this.selectPhoto.bind(this)}>
                                            <span>Take Photo</span>
                                            &nbsp;
                                            <ClipLoader
                                              sizeUnit={"px"}
                                              size={16}
                                              color={'#ffffff'}
                                              loading={this.state.loadingUpload} />
                                        </Button>
                                    </CardBody>
                                </MobileView>
                            </Card> : null
                    }
                </div>
                <div>
                    {
                        this.state.showingResults ?
                            <Card className="resultsCard">
                                <CardBody className={"camArea"}>
                                    <Row>
                                        <Col xs={12} md={4}>
                                            <img src={this.state.faceImage} style={{width: "80%"}} />
                                        </Col>
                                        <Col xs={12} md={8}>
                                            <p>Your a {Math.round(this.state.score*10)/10}</p>
                                            <p>Your face is more attractive then {this.state.percentileScore}% of peoples faces.</p>

                                            <BarChart width={450} height={250} data={this.state.data}>
                                                <CartesianGrid strokeDasharray="3 3" />
                                                <XAxis dataKey="name" tickCount={5} />
                                                <YAxis />
                                                <Bar dataKey="percent" fill="#ff0000" barSize={50} />
                                                <Bar dataKey="percent2" fill="#00ff00" barSize={50} />
                                            </BarChart>
                                        </Col>
                                    </Row>
                                    <Row>
                                        <Col xs={6}>
                                            <Button color="primary" className={"share-button"} href={this.state.fbShareLink}>Share on Facebook</Button>
                                        </Col>
                                        <Col xs={6}>
                                            <Button color="primary" className={"share-button"} href={this.state.twitterLink}>Share on Twitter</Button>
                                        </Col>
                                    </Row>
                                    <Row>
                                        <Col xs={12}>
                                            <Button color="success" className={"try-again-button"} onClick={this.tryAgain.bind(this)}>Try Again?</Button>
                                        </Col>
                                    </Row>
                                </CardBody>
                            </Card> : null
                    }
                </div>
                <div className="App-footer">
                    <a href={"https://electricbrain.io/"}>
                        <img src={"/EB_Brain_White.svg"} className={"eb-logo"}/>
                    </a>
                </div>
            </div>
        );
    }
}

export default App;
